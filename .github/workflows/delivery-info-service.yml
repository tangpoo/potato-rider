name: Delivery-Info-Service

on:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      - dev
      - main

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: 'gradle'

      - name: Start Logging
        run: echo Gradle Build Test Start

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build jar
        run: ./gradlew --info bootJar

      - name: Run Unit test
        run: ./gradlew --info delivery-info-service:test

      - name: Run integration tests
        run: ./gradlew --info delivery-info-service:integrationTest

      - name: Generate Jacoco Test Coverage
        run: ./gradlew --info :delivery-info-service:generateJacocoTestCoverage

      - name: Comment test coverage on PR
        id: jacoco
        uses: madrapps/jacoco-report@v1.2
        with:
          title: üìù ÌÖåÏä§Ìä∏ Ïª§Î≤ÑÎ¶¨ÏßÄ Î¶¨Ìè¨Ìä∏
          paths: ${{ github.workspace }}/delivery-info-service/build/jacoco/index.xml
          token: ${{ secrets.GITHUB_TOKEN }}


      # YML ÌååÏùº ÏÉùÏÑ±
      - name: Make application.yml
        run: |
          ls -al
          ls delivery-info-service
          ls delivery-info-service/src/main
          cd delivery-info-service/src/main/resources
          touch ./application.yml
          echo "${{ secrets.INFO_YML }}" >> ./application.yml
        shell: bash

      - name: ÎèÑÏª§ Ïù¥ÎØ∏ÏßÄ ÎπåÎìú
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/delivery-info-service:latest -f delivery-info-service/Dockerfile delivery-info-service
          docker push ${{ secrets.DOCKER_USERNAME }}/delivery-info-service:latest

      - name: AWS Î∞∞Ìè¨
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_HOST_INFO }}
          username: ubuntu
          key: ${{ secrets.AWS_KEYPAIR_INFO }}
          script: |
            sudo docker rm -f $(docker ps -aq)
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/delivery-info-service:latest
            sudo docker run -it --rm -e JAVA_OPTS="-Xms1G -Xmx2G" -d --name potato -p 8080:8080 tangpoo/delivery-info-service
            sudo docker image prune -f